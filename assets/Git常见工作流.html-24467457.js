import{_ as i,o as t,c as e,e as l}from"./app-e002e3c4.js";const o={},c=l('<h2 id="如何开始使用git管理项目" tabindex="-1"><a class="header-anchor" href="#如何开始使用git管理项目" aria-hidden="true">#</a> 如何开始使用git管理项目？</h2><p>一般来说，会选择使用github作为远程代码托管仓库。<br> 所以使用git管理的大致流程是：</p><ol><li>从github上面新建一个仓库(repository)</li><li>在本地使用git clone originUrl克隆远程仓库到本地</li><li>在克隆下来的仓库中进行项目开发</li><li>使用常见git命令进行版本控制，如： <ul><li><code>git add fileName</code> 添加fileName文件到git管理(git add .添加所有文件到git管理)</li><li><code>git status</code> 查看当当前git暂存区状态</li><li><code>git commit -m &#39;提交注释内容......&#39;</code> 提交所有更改为一个节点</li><li><code>git push</code> 推送到远程仓库上面</li></ul></li></ol><p>一般来说，采用上述流程管理的项目不会出现本地远程提交历史不一致的冲突，也就是没有共同祖先拒绝合并这种情况。</p>',4),a=[c];function d(r,_){return t(),e("div",null,a)}const n=i(o,[["render",d],["__file","Git常见工作流.html.vue"]]);export{n as default};
