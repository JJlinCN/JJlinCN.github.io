const t=JSON.parse(`{"key":"v-dc929a08","path":"/note/Git/Git%E5%B8%B8%E8%A7%81%E5%B7%A5%E4%BD%9C%E6%B5%81.html","title":"Git常见工作流","lang":"zh-CN","frontmatter":{"icon":"article","title":"Git常见工作流","date":"2023-07-24T00:00:00.000Z","category":["Git"],"tag":["Git","版本管理工具"],"footer":"","description":"如何开始使用git管理项目？ 一般来说，会选择使用github作为远程代码托管仓库。 所以使用git管理的大致流程是： 从github上面新建一个仓库(repository) 在本地使用git clone originUrl克隆远程仓库到本地 在克隆下来的仓库中进行项目开发 使用常见git命令进行版本控制，如： git add fileName 添加fileName文件到git管理(git add .添加所有文件到git管理) git status 查看当当前git暂存区状态 git commit -m '提交注释内容......' 提交所有更改为一个节点 git push 推送到远程仓库上面","head":[["meta",{"property":"og:url","content":"https://JJlinCN.github.io/note/Git/Git%E5%B8%B8%E8%A7%81%E5%B7%A5%E4%BD%9C%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"开源知识库"}],["meta",{"property":"og:title","content":"Git常见工作流"}],["meta",{"property":"og:description","content":"如何开始使用git管理项目？ 一般来说，会选择使用github作为远程代码托管仓库。 所以使用git管理的大致流程是： 从github上面新建一个仓库(repository) 在本地使用git clone originUrl克隆远程仓库到本地 在克隆下来的仓库中进行项目开发 使用常见git命令进行版本控制，如： git add fileName 添加fileName文件到git管理(git add .添加所有文件到git管理) git status 查看当当前git暂存区状态 git commit -m '提交注释内容......' 提交所有更改为一个节点 git push 推送到远程仓库上面"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-27T01:08:49.000Z"}],["meta",{"property":"article:author","content":"JJlinCN"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"版本管理工具"}],["meta",{"property":"article:published_time","content":"2023-07-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-27T01:08:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git常见工作流\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-27T01:08:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JJlinCN\\",\\"url\\":\\"https://JJlinCN.github.io\\",\\"email\\":\\"jjlincnpyt@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"如何开始使用git管理项目？","slug":"如何开始使用git管理项目","link":"#如何开始使用git管理项目","children":[]}],"git":{"createdTime":1690420129000,"updatedTime":1690420129000,"contributors":[{"name":"JJlinCN","email":"jjlincnpyt@qq.com","commits":1}]},"readingTime":{"minutes":0.83,"words":249},"filePathRelative":"note/Git/Git常见工作流.md","localizedDate":"2023年7月24日","excerpt":"<h2> 如何开始使用git管理项目？</h2>\\n<p>一般来说，会选择使用github作为远程代码托管仓库。<br>\\n所以使用git管理的大致流程是：</p>\\n<ol>\\n<li>从github上面新建一个仓库(repository)</li>\\n<li>在本地使用git clone originUrl克隆远程仓库到本地</li>\\n<li>在克隆下来的仓库中进行项目开发</li>\\n<li>使用常见git命令进行版本控制，如：\\n<ul>\\n<li><code>git add fileName</code> 添加fileName文件到git管理(git add .添加所有文件到git管理)</li>\\n<li><code>git status</code> 查看当当前git暂存区状态</li>\\n<li><code>git commit -m '提交注释内容......'</code> 提交所有更改为一个节点</li>\\n<li><code>git push</code> 推送到远程仓库上面</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}`);export{t as data};
